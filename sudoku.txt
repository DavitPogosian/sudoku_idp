vocabulary V {
	type row isa int		 
	type column isa int	 
	type number	isa int	 
	type block isa int	 
	valueof (row, column) : number // the cell on row [row] and column [column] contains a [number].
    blockof(row, column) : block // cell on row [row] and column[column] is in block number [block] 
    //|1|2|3|
    //|4|5|6|
    //|7|8|9|
}
theory T : V {

	//initialization of blockof [which cells to which blocks belongs]
    //blockof(r,c)=in wich block belongs to the cell in the c column and in the r row
    //it doesn't depend of suduko the values of blockof remain the same
    //blockof = { 1,1->1; 1,2->1; 1,3->1; 1,4->2; 1,5->2; 1,6->2; 1,7->3; 1,8->3; 1,9->3; 2,1->1; 2,2->1; 2,3->1; 2,4->2; 2,5->2; 2,6->2; 2,7->3; 2,8->3; 2,9->3; 3,1->1; 3,2->1; 3,3->1; 3,4->2; 3,5->2; 3,6->2; 3,7->3; 3,8->3; 3,9->3; 4,1->4; 4,2->4; 4,3->4; 4,4->5; 4,5->5; 4,6->5; 4,7->6; 4,8->6; 4,9->6; 5,1->4; 5,2->4; 5,3->4; 5,4->5; 5,5->5; 5,6->5; 5,7->6; 5,8->6; 5,9->6; 6,1->4; 6,2->4; 6,3->4; 6,4->5; 6,5->5; 6,6->5; 6,7->6; 6,8->6; 6,9->6; 7,1->7; 7,2->7; 7,3->7; 7,4->8; 7,5->8; 7,6->8; 7,7->9; 7,8->9; 7,9->9; 8,1->7; 8,2->7; 8,3->7; 8,4->8; 8,5->8; 8,6->8; 8,7->9; 8,8->9; 8,9->9; 9,1->7; 9,2->7; 9,3->7; 9,4->8; 9,5->8; 9,6->8; 9,7->9; 9,8->9; 9,9->9 }
	{
		blockof(r,c) = (((r - 1) - (r - 1)%3) / 3) * 3 + (((c - 1)-(c - 1)%3) / 3) + 1.
	}
    
	! r : ! n : ? c : valueof (r,c) = n.//You can find every number in every row
	! c : ! n : ? r : valueof (r,c) = n.//You can find every number in every column
	! b : ! n : ? r c : blockof(r,c)=b & valueof (r,c) = n.//You can find every number in every block
    

    //input sudoku below 
    //taken from  https://www.andrew.cmu.edu/user/kkuan/sudoku_puzzle.png
    valueof (1,2)=2.valueof (1,6)=4.valueof (1,7)=3.
    valueof (2,1)=9.valueof (2,5)=2.valueof (2,9)=8.
    valueof (3,4)=6.valueof (3,6)=9.valueof (3,8)=5.
    valueof (4,9)=1.
    valueof (5,2)=7. valueof (5,3)=2. valueof (5,4)=5. valueof (5,6)=3. valueof (5,7)=6. valueof (5,8)=8.
    valueof (6,1)=6.
    valueof (7,2)=8. valueof (7,4)=2. valueof (7,6)=5.
    valueof (8,1)=1. valueof (8,5)=9. valueof (8,9)=3.
    valueof (9,3)=9. valueof (9,4)=8. valueof (9,8)=6.


     
}

structure S:V{
	row={1..9} // there are 9 rows
    column={1..9} // there are 9 columns 
    number={1..9} // valus are from 1 to 9
    block = { 1..9 }// there are 9 blocks (the size of a block is 3x3)
}

procedure main(){

    //stdoptions.nbmodels = 10 //(if you want more than 1 model.10 in this case)
	printmodels(modelexpand(T,S))
}



